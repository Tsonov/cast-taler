apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app
  namespace: taler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-app
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-app
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-app
subjects:
  - kind: ServiceAccount
    name: test-app
    namespace: taler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-client
  namespace: taler
spec:
  replicas: 3
  selector:
    matchLabels:
      app: echo-client
  template:
    metadata:
      labels:
        app: echo-client
    spec:
      serviceAccountName: test-app
      containers:
        - name: echo-client
          image: ghcr.io/tsonov/cast-taler/echo:latest
          imagePullPolicy: Always
          args:
            - --module
            - echo-client
            - --node-name=$(NODE_NAME)
            - --zone-config-path
            - /etc/zone-config/zones.yaml
            - --client-request-number-per-second=100
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: zone-config
              mountPath: /etc/zone-config/zones.yaml
              subPath: zones.yaml
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
      volumes:
        - name: zone-config
          configMap:
            name: zone-response-probabilities
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo-server
  name: echo-server
  namespace: taler
spec:
  replicas: 3
  selector:
    matchLabels:
      app: echo-server
  template:
    metadata:
      labels:
        app: echo-server
    spec:
      serviceAccountName: test-app
      containers:
        - args:
            - --module
            - echo-server
            - --module
            - memory
            - --node-name=$(NODE_NAME)
            - --zone-config-path
            - /etc/zone-config/zones.yaml
          image: ghcr.io/tsonov/cast-taler/echo:latest
          imagePullPolicy: Always
          name: echo-server
          ports:
            - containerPort: 8080
              name: tcp
            - containerPort: 10000
              name: udp
            - containerPort: 9090
              name: prom
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: zone-config
              mountPath: /etc/zone-config/zones.yaml
              subPath: zones.yaml
          resources:
            requests:
              memory: 1Gi
            limits:
              memory: 1Gi
      volumes:
        - name: zone-config
          configMap:
            name: zone-response-probabilities
---
apiVersion: v1
kind: Service
metadata:
  name: echo-server
  namespace: taler
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: tcp-test
    - port: 9090
      protocol: TCP
      targetPort: 9090
      name: prom
    - port: 10000
      protocol: UDP
      targetPort: 10000
      name: udp-test
  selector:
    app: echo-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zone-response-probabilities
  namespace: taler
data:
  zones.yaml: |
    a:
      requestsPerSeconds: 10
      parallelRequests: 50
      200: 100
      404: 0
      500: 0
      503: 0
      504: 0
    b:
      requestsPerSeconds: 10
      parallelRequests: 1
      200: 100
      404: 0
      500: 0
      503: 0
      504: 0
    c:
      requestsPerSeconds: 10
      parallelRequests: 1
      200: 100
      404: 0
      500: 0
      503: 0
      504: 0
---

