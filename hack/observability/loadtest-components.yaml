apiVersion: v1
kind: Namespace
metadata:
  name: taler
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa
  namespace: taler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-role-binding
subjects:
  - kind: ServiceAccount
    name: prometheus-sa
    namespace: taler
roleRef:
  kind: ClusterRole
  name: prometheus-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-role
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: taler
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s
---
apiVersion: v1
kind: Service
metadata:
  name: observability-service
  namespace: taler
spec:
  selector:
    app: simple-observability
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: grafana
    - protocol: TCP
      port: 9090
      targetPort: 9090
      name: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-observability
  namespace: taler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-observability
  template:
    metadata:
      labels:
        app: simple-observability
    spec:
      serviceAccountName: prometheus-sa
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            # Mount the datasource provisioning
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
              subPath: datasource.yaml
            # Mount the custom grafana.ini to disable login and enable anonymous access
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            # Mount the dashboards provisioning file
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
        - name: grafana-config
          configMap:
            name: grafana-config